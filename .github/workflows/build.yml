name: Test and package

on:
  push:
  pull_request:

jobs:
  package-windows:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        arch:
        - x86_64
    env:
      OS: windows
      ARCH: ${{ matrix.arch }}
    steps:
    - uses: actions/checkout@v3
    - name: Install dependencies
      run: |
        sudo apt-get update -y && \
        sudo apt-get install -y mingw-w64
    - name: Build
      run: ./package/build.sh
    - name: Archive artifacts
      uses: actions/upload-artifact@v2
      with:
        name: chromaprint-${{ env.OS }}-${{ env.ARCH }}
        path: artifacts/

  release:
    runs-on: ubuntu-latest
    needs:
      - package-windows
    steps:
      - uses: actions/checkout@v3

      - name: Set version
        id: version
        run: |
          case $GITHUB_REF in
            refs/tags/v*)
              VERSION=${GITHUB_REF//refs\/tags\/v/}
              ;;
            *)
              VERSION=${GITHUB_REF##*/}-${GITHUB_SHA:0:12}
              ;;
          esac
          echo "::set-output name=VERSION::$VERSION"

      - uses: actions/download-artifact@v2

      - name: Make source tarball
        run: |
          mkdir -p artifacts/
          git archive --format=tar.gz --prefix=chromaprint-${{ steps.version.outputs.VERSION }}/ $GITHUB_SHA > artifacts/chromaprint-${{ steps.version.outputs.VERSION }}.tar.gz

      - name: Make binary tarballs
        run: |
          for dir in chromaprint-{linux,macos,windows}-*
          do
            name=$(echo $(basename $dir) | sed "s/chromaprint-/chromaprint-fpcalc-${{ steps.version.outputs.VERSION }}-/")
            mkdir -p tmp/$name
            mv $dir/bin/fpcalc* tmp/$name
            chmod +x tmp/$name/fpcalc*
            if [ -e tmp/$name/fpcalc.exe ]
            then
              (cd tmp && zip -r ../artifacts/$name.zip $name)
            else
              tar cvzf artifacts/$name.tar.gz -C tmp $name
            fi
            rm -rf tmp
          done

      - name: List tarballs
        run: |
          ls -l artifacts/
